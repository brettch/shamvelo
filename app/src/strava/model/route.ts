/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PolylineMap } from './polylineMap';
import { SummaryAthlete } from './summaryAthlete';
import { SummarySegment } from './summarySegment';

export class Route {
    'athlete'?: SummaryAthlete;
    /**
    * The description of the route
    */
    'description'?: string;
    /**
    * The route\'s distance, in meters
    */
    'distance'?: number;
    /**
    * The route\'s elevation gain.
    */
    'elevationGain'?: number;
    /**
    * The unique identifier of this route
    */
    'id'?: number;
    /**
    * The unique identifier of the route in string format
    */
    'idStr'?: string;
    'map'?: PolylineMap;
    /**
    * The name of this route
    */
    'name'?: string;
    /**
    * Whether this route is private
    */
    '_private'?: boolean;
    /**
    * Whether this route is starred by the logged-in athlete
    */
    'starred'?: boolean;
    /**
    * An epoch timestamp of when the route was created
    */
    'timestamp'?: number;
    /**
    * This route\'s type (1 for ride, 2 for runs)
    */
    'type'?: number;
    /**
    * This route\'s sub-type (1 for road, 2 for mountain bike, 3 for cross, 4 for trail, 5 for mixed)
    */
    'subType'?: number;
    /**
    * The time at which the route was created
    */
    'createdAt'?: Date;
    /**
    * The time at which the route was last updated
    */
    'updatedAt'?: Date;
    /**
    * Estimated time in seconds for the authenticated athlete to complete route
    */
    'estimatedMovingTime'?: number;
    /**
    * The segments traversed by this route
    */
    'segments'?: Array<SummarySegment>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "athlete",
            "baseName": "athlete",
            "type": "SummaryAthlete"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "distance",
            "baseName": "distance",
            "type": "number"
        },
        {
            "name": "elevationGain",
            "baseName": "elevation_gain",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "idStr",
            "baseName": "id_str",
            "type": "string"
        },
        {
            "name": "map",
            "baseName": "map",
            "type": "PolylineMap"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "_private",
            "baseName": "private",
            "type": "boolean"
        },
        {
            "name": "starred",
            "baseName": "starred",
            "type": "boolean"
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "number"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "number"
        },
        {
            "name": "subType",
            "baseName": "sub_type",
            "type": "number"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        },
        {
            "name": "estimatedMovingTime",
            "baseName": "estimated_moving_time",
            "type": "number"
        },
        {
            "name": "segments",
            "baseName": "segments",
            "type": "Array<SummarySegment>"
        }    ];

    static getAttributeTypeMap() {
        return Route.attributeTypeMap;
    }
}

