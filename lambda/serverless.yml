# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: shamvelo # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3
  memorySize: 256
  cfLogs: true

  # you can overwrite defaults here
  stage: prod
  region: ap-southeast-2

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ActivityBucket" }, "/*" ] ] }
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "AthleteBucket" }, "/*" ] ] }
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "TokenBucket" }, "/*" ] ] }
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ViewBucket" }, "/*" ] ] }

# you can add packaging information here
#package:
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  getRegisterRedirect:
    handler: handler.getRegister
    events:
      - http:
          path: register
          method: get
  getRegisterCode:
    handler: handler.getRegisterCode
    events:
      - http:
          path: registercode
          method: get
  getRegisterToken:
    handler: handler.getRegisterToken
    events:
      - http:
          path: registertoken
          method: get
  hello:
    handler: handler.hello

    events:
      - http:
          path: hello
          method: get

# you can add CloudFormation resource templates here
resources:
  Resources:
    ActivityBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-activity
    AthleteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-athlete
    TokenBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-token
    ViewBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-view
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
