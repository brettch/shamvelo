# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: shamvelo # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs4.3
  memorySize: 256
  cfLogs: true

  # you can overwrite defaults here
  stage: prod
  region: ap-southeast-2

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketShamveloprodactivity" }, "/*" ] ] }
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketShamveloprodactivity" } ] ] }
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketShamveloprodathlete" }, "/*" ] ] }
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketShamveloprodathlete" } ] ] }
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketShamveloprodtoken" }, "/*" ] ] }
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketShamveloprodtoken" } ] ] }
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketShamveloprodview" }, "/*" ] ] }
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "S3BucketShamveloprodview" } ] ] }

# you can add packaging information here
#package:
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  getRegisterRedirect:
    handler: handler.getRegister
    events:
      - http:
          path: register
          method: get
  getRegisterCode:
    handler: handler.getRegisterCode
    events:
      - http:
          path: registercode
          method: get
  getRegisterToken:
    handler: handler.getRegisterToken
    events:
      - http:
          path: registertoken
          method: get
  buildHomeView:
    handler: handler.buildHomeView
    events:
      - sns: ${self:service}-${self:provider.stage}-athlete
  getHomeView:
    handler: handler.getHomeView
    events:
      - http:
          path: home
          method: get
  buildAthleteView:
    handler: handler.buildAthleteView
    events:
      - sns: ${self:service}-${self:provider.stage}-athlete
  getAthleteView:
    handler: handler.getAthleteView
    events:
      - http:
          path: athlete/{athleteId}
          method: get
  refreshAllActivities:
    handler: handler.refreshAllActivities
    events:
      - schedule: rate(1 hours)
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get

# you can add CloudFormation resource templates here
resources:
  Resources:
    S3BucketShamveloprodactivity:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-activity
    S3BucketShamveloprodathlete:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-athlete
        NotificationConfiguration:
          TopicConfigurations:
            - Event: s3:ObjectCreated:*
              Topic:
                Ref: SNSTopicShamveloprodathlete
    S3BucketShamveloprodtoken:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-token
    S3BucketShamveloprodview:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}-view
    SNSTopicShamveloprodathlete:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-athlete

    IamPolicyAthleteTopic:
      Type: AWS::SNS::TopicPolicy
      Properties:
        PolicyDocument:
          Id: AthleteBucketNotificationPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: AllowBucketToNotifyAthleteUpload
              Effect: Allow
              Principal:
                Service: s3.amazonaws.com
              Action:
                - sns:Publish
              Resource:
                Ref: SNSTopicShamveloprodathlete
              Condition:
                ArnLike:
                  aws:SourceArn: arn:aws:s3:*:*:${self:service}-${self:provider.stage}-athlete
        Topics:
          - Ref: SNSTopicShamveloprodathlete

#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
